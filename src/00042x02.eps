%!PS-Adobe-3.0 EPSF-3.0
%%Title: 00042x02.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sun Mar 30 18:54:51 2003
%%Pages: 1
%%BoundingBox: 68 68 341 298
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/hobby_motor {
% -48 -48 99 104 bbox
begingate
1  1.00 -16 -16 32 0.00 360.00 xcarc
1  3.00 -16 -16 -32 -32 2 polygon
1  1.00 -40 6 -4 38 2 polygon
1  1.00 8 -38 44 -6 2 polygon
1  1.00 26 64 68 34 44 -6 -4 38 spline
1  1.00 16 48 16 52 20 56 24 52 24 48 5 polygon
1  1.00 39 42 42 45 49 46 48 39 45 37 5 polygon
1  1.00 20 51 1 0.00 360.00 xcarc
1  1.00 44 42 1 0.00 360.00 xcarc
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

%%Page: 00041x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 592 552 offsets
0.7500 inchscale
2.6000 setlinewidth

1.00 0 352 392 hobby_motor
(24 VDC) {/Helvetica 1.000 cf} 2 16 0 256 296 label
(motor) {/Helvetica 1.000 cf} 2 16 0 272 256 label
0.600 0.600 0.600 scb
240  1.00 528 712 528 600 720 600 720 712 4 polygon
241  1.00 528 712 656 808 848 808 720 712 528 712 5 polygon
241  1.00 720 712 720 600 848 696 848 808 720 712 5 polygon
sce
0  1.00 528 712 528 600 720 600 720 712 4 polygon
1  1.00 528 712 656 808 848 808 720 712 528 712 5 polygon
1  1.00 720 712 720 600 848 696 848 808 720 712 5 polygon
1  3.00 992 728 912 568 1040 568 848 728 spline
241  1.00 1024 584 1024 552 1072 552 1072 584 spline
1  1.00 1072 584 1072 552 2 polygon
1  1.00 1072 576 1088 576 2 polygon
1  1.00 1072 560 1088 560 2 polygon
1  1.00 1144 584 1144 568 2 polygon
1  1.00 1160 584 1160 568 2 polygon
1.00 0 1152 552 dot
1  1.00 1152 568 28 0.00 360.00 xcarc
1  1.00 1144 656 1144 640 2 polygon
1  1.00 1160 656 1160 640 2 polygon
1.00 0 1152 624 dot
1  1.00 1152 640 28 0.00 360.00 xcarc
0  1.00 1104 680 1104 528 1200 528 1200 680 4 polygon
1  1.00 672 632 16 0.00 360.00 xcarc
1  1.00 680 648 688 648 688 640 680 648 4 polygon
0  1.00 544 696 544 656 624 656 624 696 4 polygon
1  1.00 576 688 592 688 624 680 544 680 spline
1  1.00 584 664 568 688 2 polygon
1.00 0 560 616 dot
1.00 0 608 616 dot
(+) {/Helvetica 1.000 cf} 2 16 0 548 624 label
(-) {/Helvetica 1.000 cf} 2 16 0 600 624 label
(Power) {/Helvetica 1.000 cf} 2 16 0 648 768 label
(supply) {/Helvetica 1.000 cf} 2 16 0 624 736 label
0.600 0.600 0.600 scb
240  1.00 528 952 528 840 720 840 720 952 4 polygon
241  1.00 528 952 656 1048 848 1048 720 952 528 952 5 polygon
241  1.00 720 952 720 840 848 936 848 1048 720 952 5 polygon
sce
0  1.00 528 952 528 840 720 840 720 952 4 polygon
1  1.00 528 952 656 1048 848 1048 720 952 528 952 5 polygon
1  1.00 720 952 720 840 848 936 848 1048 720 952 5 polygon
241  1.00 1024 664 1024 632 1072 632 1072 664 spline
1  1.00 1072 664 1072 632 2 polygon
1  1.00 1072 656 1088 656 2 polygon
1  1.00 1072 640 1088 640 2 polygon
1  1.00 672 872 16 0.00 360.00 xcarc
1  1.00 680 888 688 888 688 880 680 888 4 polygon
0  1.00 544 936 544 896 624 896 624 936 4 polygon
1  1.00 576 928 592 928 624 920 544 920 spline
1  1.00 584 904 568 928 2 polygon
1.00 0 560 856 dot
1.00 0 608 856 dot
(+) {/Helvetica 1.000 cf} 2 16 0 548 864 label
(-) {/Helvetica 1.000 cf} 2 16 0 600 864 label
(Power) {/Helvetica 1.000 cf} 2 16 0 648 1008 label
(supply) {/Helvetica 1.000 cf} 2 16 0 624 976 label
1  2.00 376 780 300 664 372 444 560 856 spline
1  2.00 468 748 444 608 560 616 608 856 spline
1  2.00 612 504 552 420 396 432 608 616 spline
1  3.00 1008 960 948 652 1044 648 848 968 spline
(12 volts) {/Helvetica 1.000 cf} 2 16 0 768 840 label
(12 volts) {/Helvetica 1.000 cf} 2 16 0 656 552 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
