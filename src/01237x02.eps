%!PS-Adobe-3.0 EPSF-3.0
%%Title: 01237x02.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Wed Dec 17 15:56:26 2003
%%Pages: 1
%%BoundingBox: 68 68 484 295
%%DocumentNeededResources: font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%Page: 14052 1
%%PageOrientation: Portrait
/pgsave save def bop
% 736 488 offsets
% 32.00 8.00 gridspace
1.0000 inchscale
2.6000 setlinewidth

0.800 0.800 0.800 scb
241 1.00 448 488 256 0.00 360.00 xcarc
sce
1 1.00 448 488 256 0.00 360.00 xcarc
1 1.00 448 504 448 472 2 polygon
1 1.00 432 488 464 488 2 polygon
0.604 0.604 0.604 scb
1 1.00 448 488 448 744 2 polygon
1 1.00 448 488 350 724 2 polygon
1 1.00 448 488 308 696 2 polygon
1 1.00 448 488 267 669 2 polygon
1 1.00 448 488 239 627 2 polygon
1 1.00 448 488 211 586 2 polygon
1 1.00 448 488 201 537 2 polygon
1 1.00 448 488 192 488 2 polygon
1 1.00 448 488 695 439 2 polygon
1 1.00 448 488 685 390 2 polygon
1 1.00 448 488 657 349 2 polygon
1 1.00 448 488 629 307 2 polygon
1 1.00 448 488 588 280 2 polygon
1 1.00 448 488 546 252 2 polygon
1 1.00 448 488 497 242 2 polygon
1 1.00 448 488 448 232 2 polygon
1 1.00 448 488 704 488 2 polygon
1 1.00 448 488 201 439 2 polygon
1 1.00 448 488 211 390 2 polygon
1 1.00 448 488 239 349 2 polygon
1 1.00 448 488 267 307 2 polygon
1 1.00 448 488 308 280 2 polygon
1 1.00 448 488 350 252 2 polygon
1 1.00 448 488 399 242 2 polygon
1 1.00 448 488 695 537 2 polygon
1 1.00 448 488 685 586 2 polygon
1 1.00 448 488 657 627 2 polygon
1 1.00 448 488 629 669 2 polygon
1 1.00 448 488 588 696 2 polygon
1 1.00 448 488 546 724 2 polygon
1 1.00 448 488 497 734 2 polygon
1 1.00 448 488 399 734 2 polygon
0.800 0.800 0.800 scb
241 1.00 1024 488 256 0.00 360.00 xcarc
sce
1 1.00 1024 488 256 0.00 360.00 xcarc
1 1.00 1024 472 1024 504 2 polygon
1 1.00 1008 488 1040 488 2 polygon
0.604 0.604 0.604 scb
1 1.00 1024 488 1024 232 2 polygon
1 1.00 1024 488 926 252 2 polygon
1 1.00 1024 488 884 280 2 polygon
1 1.00 1024 488 843 307 2 polygon
1 1.00 1024 488 815 349 2 polygon
1 1.00 1024 488 787 390 2 polygon
1 1.00 1024 488 777 439 2 polygon
1 1.00 1024 488 768 488 2 polygon
1 1.00 1024 488 1271 537 2 polygon
1 1.00 1024 488 1261 586 2 polygon
1 1.00 1024 488 1233 627 2 polygon
1 1.00 1024 488 1205 669 2 polygon
1 1.00 1024 488 1164 696 2 polygon
1 1.00 1024 488 1122 724 2 polygon
1 1.00 1024 488 1073 734 2 polygon
1 1.00 1024 488 1024 744 2 polygon
1 1.00 1024 488 1280 488 2 polygon
1 1.00 1024 488 777 537 2 polygon
1 1.00 1024 488 787 586 2 polygon
1 1.00 1024 488 815 627 2 polygon
1 1.00 1024 488 843 669 2 polygon
1 1.00 1024 488 884 696 2 polygon
1 1.00 1024 488 926 724 2 polygon
1 1.00 1024 488 975 734 2 polygon
1 1.00 1024 488 1271 439 2 polygon
1 1.00 1024 488 1261 390 2 polygon
1 1.00 1024 488 1233 349 2 polygon
1 1.00 1024 488 1205 307 2 polygon
1 1.00 1024 488 1164 280 2 polygon
1 1.00 1024 488 1122 252 2 polygon
1 1.00 1024 488 1073 242 2 polygon
1 1.00 1024 488 975 242 2 polygon
sce
1 5.00 940 544 940 432 1024 424 1024 552 spline
1 5.00 1158 533 1170 456 1115 398 1115 578 spline
1 5.00 890 533 878 456 933 398 933 578 spline
1 5.00 940 432 940 544 1024 552 1024 424 spline
1 5.00 936 616 1112 616 1120 488 928 488 spline
1 5.00 1158 443 1170 520 1115 578 1115 398 spline
1 5.00 890 443 878 520 933 578 933 398 spline
1 5.00 1124 356 1158 390 1171 427 1086 341 spline
1 5.00 924 356 890 390 877 427 962 341 spline
1 5.00 1124 620 1158 586 1171 549 1086 635 spline
1 5.00 924 620 890 586 877 549 962 635 spline
1 5.00 1083 303 1113 316 1131 329 1062 300 spline
1 5.00 965 303 935 316 917 329 986 300 spline
1 5.00 1083 673 1113 660 1131 647 1062 676 spline
1 5.00 965 673 935 660 917 647 986 676 spline
1 5.00 854 395 839 429 836 451 864 382 spline
1 5.00 854 581 839 547 836 525 864 594 spline
1 5.00 1194 395 1209 429 1212 451 1184 382 spline
1 5.00 1194 581 1209 547 1212 525 1184 594 spline
1 5.00 400 584 352 552 352 488 448 584 spline
1 5.00 496 392 544 424 544 488 448 392 spline
1 5.00 321 454 332 425 357 398 320 488 spline
1 5.00 478 360 510 370 538 397 448 360 spline
1 5.00 576 522 563 554 539 578 576 488 spline
1 5.00 421 617 381 604 358 579 448 616 spline
1 5.00 424 647 409 644 387 636 448 648 spline
1 5.00 318 584 308 568 300 549 335 601 spline
1 5.00 288 464 294 441 300 427 288 488 spline
1 5.00 350 360 368 348 386 340 335 375 spline
1 5.00 466 328 494 333 509 340 448 328 spline
1 5.00 576 389 589 410 596 427 561 375 spline
1 5.00 604 530 608 508 608 488 596 549 spline
1 5.00 532 626 548 614 561 601 510 636 spline
1 5.00 425 679 433 680 448 680 410 676 spline
1 5.00 363 661 352 655 341 647 374 665 spline
1 5.00 303 613 296 607 288 594 313 624 spline
1 5.00 267 552 262 541 260 526 271 561 spline
1 5.00 257 472 256 463 260 451 256 488 spline
1 5.00 276 402 280 394 288 382 270 415 spline
1 5.00 322 343 328 337 341 329 312 352 spline
1 5.00 385 306 396 302 410 300 375 311 spline
1 5.00 464 296 473 297 485 300 448 296 spline
1 5.00 534 316 545 321 555 328 521 311 spline
1 5.00 595 363 601 372 608 382 583 352 spline
1 5.00 631 432 634 434 636 451 625 415 spline
1 5.00 641 502 639 512 636 525 640 488 spline
1 5.00 620 576 615 585 608 594 625 562 spline
1 5.00 567 640 574 634 584 624 555 647 spline
1 5.00 498 674 508 671 521 665 485 676 spline
1 5.00 364 544 364 432 448 424 448 552 spline
(0) {/Times-Roman cf} 2 16 0 1.00 464 752 label
(1) {/Times-Roman cf} 2 16 0 1.00 520 744 label
(2) {/Times-Roman cf} 2 16 0 1.00 568 720 label
(0) {/Times-Roman cf} 2 16 0 1.00 1040 192 label
(1) {/Times-Roman cf} 2 16 0 1.00 1096 208 label
(2) {/Times-Roman cf} 2 16 0 1.00 1136 224 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
