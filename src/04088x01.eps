%!PS-Adobe-3.0 EPSF-3.0
%%Title: 04088x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Thu May  3 09:48:39 2007
%%Pages: 1
%%BoundingBox: 68 68 403 170
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/bluearrow {
begingate
0.000 0.000 1.000 scb
241 1.00 -80 16 16 16 16 48 96 0 16 -48 16 -16 -80 -16 -80 16 8 polygon
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 840 388 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

0.361 0.675 0.933 scb
241 1.00 264 588 284 580 292 576 300 576 312 572 324 568 332 568 340 564 348 
564 352 564 364 564 384 560 416 556 428 556 440 556 464 552 488 548 508 544 520 
544 528 544 544 540 560 540 588 540 600 540 620 540 644 536 680 528 696 528 708 
528 732 528 756 528 788 528 808 532 832 528 856 528 880 524 908 524 928 524 948 
524 964 524 980 520 1024 520 1044 520 1072 524 1096 520 1112 520 1124 524 1136 
524 1152 524 1168 524 1204 532 1224 536 1244 540 1264 540 1272 544 1304 540 
1316 540 1328 544 1340 544 1348 544 1356 548 1376 552 1384 552 1404 556 1416 
560 1420 560 1420 284 1412 284 1400 284 1392 284 1384 284 1368 280 1364 280 
1360 280 1340 276 1332 276 1324 276 1316 276 1312 276 1300 276 1284 268 1280 
268 1252 268 1244 268 1240 268 1228 268 1192 264 1172 264 1156 264 1152 268 
1132 268 1128 268 1116 268 1088 260 1080 256 1072 256 1048 260 1032 260 1004 
264 980 264 968 264 928 268 920 268 900 268 868 272 836 264 812 268 800 268 780 
268 776 268 756 268 716 276 700 280 684 280 656 284 640 284 616 284 560 292 548 
292 532 292 516 296 504 300 492 300 440 304 424 304 388 312 364 312 344 312 332 
312 304 316 296 320 288 320 256 328 256 592 264 588 135 polygon
sce
1 1.00 264 588 284 580 292 576 300 576 312 572 324 568 332 568 340 564 348 564 
352 564 364 564 384 560 416 556 428 556 440 556 464 552 488 548 508 544 520 544 
528 544 544 540 560 540 588 540 600 540 620 540 644 536 680 528 696 528 708 528 
732 528 756 528 788 528 808 532 832 528 856 528 880 524 908 524 928 524 948 524 
964 524 980 520 1024 520 1044 520 1072 524 1096 520 1112 520 1124 524 1136 524 
1152 524 1168 524 1204 532 1224 536 1244 540 1264 540 1272 544 1304 540 1316 
540 1328 544 1340 544 1348 544 1356 548 1376 552 1384 552 1404 556 1416 560 
1420 560 1420 284 1412 284 1400 284 1392 284 1384 284 1368 280 1364 280 1360 
280 1340 276 1332 276 1324 276 1316 276 1312 276 1300 276 1284 268 1280 268 
1252 268 1244 268 1240 268 1228 268 1192 264 1172 264 1156 264 1152 268 1132 
268 1128 268 1116 268 1088 260 1080 256 1072 256 1048 260 1032 260 1004 264 980 
264 968 264 928 268 920 268 900 268 868 272 836 264 812 268 800 268 780 268 776 
268 756 268 716 276 700 280 684 280 656 284 640 284 616 284 560 292 548 292 532 
292 516 296 504 300 492 300 440 304 424 304 388 312 364 312 344 312 332 312 304 
316 296 320 288 320 256 328 256 592 264 588 135 polygon
1.00 360 600 404 bluearrow
0.000 0.000 1.000 scb
(Current) {/Helvetica-Oblique cf} 2 16 0 1.00 352 396 label
0.600 0.600 0.600 scb
241 1.00 808 420 840 436 872 436 792 404 spline
241 1.00 808 388 840 372 872 372 792 404 spline
241 1.00 872 436 936 436 936 372 872 372 4 polygon
241 1.00 792 404 872 436 872 372 792 404 4 polygon
sce
1 1.00 808 420 840 436 872 436 792 404 spline
1 1.00 808 388 840 372 872 372 792 404 spline
1 1.00 872 436 936 436 936 372 872 372 4 polygon
(Boat) {/Helvetica-Oblique cf} 2 16 0 1.00 840 388 label
(River) {/Helvetica cf} 2 16 0 1.00 536 564 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
