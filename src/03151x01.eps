%!PS-Adobe-3.0 EPSF-3.0
%%Title: 03151x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Thu Jun  1 16:44:33 2006
%%Pages: 1
%%BoundingBox: 68 68 454 602
%%DocumentNeededResources: font Helvetica font Helvetica-Bold font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/spdt_toggle {
begingate
1.00 0 16 16 dot
1 1.00 16 16 16 32 64 32 3 polygon
1.00 0 16 -16 dot
1 1.00 16 -16 16 -32 64 -32 3 polygon
1 1.00 -16 0 32 -16 2 polygon
1 1.00 -64 0 -16 0 2 polygon
1.00 0 -16 0 dot
endgate
} def

/dpdt_toggle {
begingate
1.00 0 0 48 spdt_toggle
1 1.00 0 32 0 40 2 polygon
1 1.00 0 0 0 16 2 polygon
1.00 0 0 -32 spdt_toggle
1 1.00 0 -32 0 -16 2 polygon
endgate
} def

/inductor {
begingate
1 1.00 20 -28 20 -44 0 -48 0 -24 spline
1 1.00 -20 -20 -20 -32 0 -28 0 -24 spline
1 1.00 20 32 20 16 0 12 0 36 spline
1 1.00 20 12 20 -4 0 -8 0 16 spline
1 1.00 20 -8 20 -24 0 -28 0 -4 spline
1 1.00 -20 20 -20 8 0 12 0 16 spline
1 1.00 -20 0 -20 -12 0 -8 0 -4 spline
1 1.00 0 -48 0 -64 2 polygon
1 1.00 0 36 0 48 2 polygon
1.000 0.000 0.000 scb
(l.1) {/Times-Roman cf} 2 9 0 1.00 0 48 pinlabel
(l.2) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:L%i %pl.1 %pl.2 1.0U) {/Times-Roman cf} 2 0 0 1.00 -208 -160 infolabel
(sim:l %pl.1 %pl.2) {/Times-Roman cf} 2 0 0 1.00 -208 -208 infolabel
endgate
} def

/battery {
begingate
1 1.00 -32 32 32 32 2 polygon
1 1.00 0 64 0 32 2 polygon
1 1.00 -16 12 16 12 2 polygon
1 1.00 -16 -28 16 -28 2 polygon
1 1.00 -32 -8 32 -8 2 polygon
1 1.00 0 -64 0 -28 2 polygon
1.000 0.000 0.000 scb
(b.p) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
(b.m) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
endgate
} def

/motor {
begingate
1 1.00 0 0 48 0.00 360.00 xcarc
1 1.00 -8 48 -8 64 8 64 8 48 4 polygon
1 1.00 -8 -48 -8 -64 8 -64 8 -48 4 polygon
(Mtr) {/Helvetica cf} 2 16 0 1.00 -28 -12 label
endgate
} def

/nc_pushbutton {
begingate
1 1.00 16 -16 64 -16 2 polygon
1.00 0 16 -16 dot
1 1.00 -32 -24 32 -24 2 polygon
1 1.00 0 -24 0 24 2 polygon
1 1.00 -64 -16 -16 -16 2 polygon
1.00 0 -16 -16 dot
endgate
} def

/jumper {
% trivial
begingate
1 1.00 0 0 10 -90.00 90.00 xcarc
1 1.00 0 10 0 16 2 polygon
1 1.00 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.00 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.00 0 -16 pinlabel
endgate
} def

/no_pushbutton {
begingate
1 1.00 -32 0 32 0 2 polygon
1 1.00 0 32 0 0 2 polygon
1 1.00 -64 -16 -16 -16 2 polygon
1.00 0 -16 -16 dot
1 1.00 16 -16 64 -16 2 polygon
1.00 0 16 -16 dot
endgate
} def

/diode {
begingate
248 1.00 -18 -16 0 16 18 -16 3 polygon
1 1.00 0 -48 0 -16 2 polygon
1 1.00 0 48 0 16 2 polygon
1 1.00 -18 16 18 16 2 polygon
1.000 0.000 0.000 scb
(d.m) {/Times-Roman cf} 2 9 0 1.00 0 48 pinlabel
(d.p) {/Times-Roman cf} 2 13 0 1.00 0 -48 pinlabel
endgate
} def

%%Page: junk.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 928 1296 offsets
% 32.00 32.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

0 1.00 256 256 256 2128 1600 2128 1600 256 4 polygon
(Version:) {/Helvetica cf} 2 16 0 1.00 1328 2080 label
1 1.00 256 2056 1600 2056 2 polygon
(Schematic) {/Helvetica cf} 2 16 0 1.00 268 2020 label
0 1.00 256 2056 256 2008 472 2008 472 2056 4 polygon
(Reversing start/stop motor control circuit) {/Helvetica-Bold cf} 
(Competency: ) {/Helvetica cf} 4 16 0 1.00 272 2080 label
1 1.00 256 792 1600 792 2 polygon
0 1.00 256 792 256 744 496 744 496 792 4 polygon
(Parameters) {/Helvetica cf} 2 16 0 1.00 268 756 label
0 1.00 1184 656 1184 592 1248 592 1248 656 4 polygon
0 1.00 1184 480 1184 416 1248 416 1248 480 4 polygon
(Motor starts and latches in "Forward") {/Helvetica cf} 2 16 0 1.00 480 608 
label
(Motor starts and latches in "Reverse") {/Helvetica cf} 2 16 0 1.00 480 432 
label
1.00 0 608 1360 dpdt_toggle
-1.00 360 648 1624 inductor
1 1.00 616 1656 616 1576 2 polygon
1 1.00 600 1656 600 1576 2 polygon
1 1.00 608 1400 608 1408 2 polygon
1 1.00 608 1424 608 1440 2 polygon
1 1.00 648 1672 648 1680 672 1680 3 polygon
1 1.00 648 1560 648 1552 672 1552 3 polygon
-1.00 0 1248 1360 dpdt_toggle
1.00 360 1208 1624 inductor
1 1.00 1240 1656 1240 1576 2 polygon
1 1.00 1256 1656 1256 1576 2 polygon
1 1.00 1248 1400 1248 1408 2 polygon
1 1.00 1248 1424 1248 1440 2 polygon
1 1.00 1208 1672 1208 1680 1184 1680 3 polygon
1 1.00 1208 1560 1208 1552 1184 1552 3 polygon
1.00 90 928 1120 battery
1 1.00 608 1488 608 1504 2 polygon
(RLY1) {/Helvetica cf} 2 16 0 1.00 560 1712 label
(RLY2) {/Helvetica cf} 2 19 0 1.00 1296 1712 label
1.00 360 928 1344 motor
1.00 0 832 1808 nc_pushbutton
1 1.00 672 1440 928 1440 928 1408 3 polygon
1.00 0 928 1440 dot
1 1.00 928 1440 1184 1440 2 polygon
1.00 0 928 1248 dot
1 1.00 1184 1360 1120 1360 1120 1248 928 1248 928 1280 5 polygon
1 1.00 992 1120 1408 1120 1408 1408 1312 1408 4 polygon
1.00 0 1024 1120 dot
1.00 0 832 1120 dot
1 1.00 832 1120 832 1184 1360 1184 1360 1328 1312 1328 5 polygon
1 1.00 864 1120 448 1120 448 1408 544 1408 4 polygon
1 1.00 544 1328 496 1328 496 1136 3 polygon
1.00 0 496 1120 jumper
1 1.00 496 1104 496 1056 1024 1056 1024 1120 4 polygon
1 1.00 672 1680 1184 1680 2 polygon
1.00 0 928 1680 dot
1.00 0 448 1408 dot
1.00 0 768 1568 no_pushbutton
1 1.00 672 1360 848 1360 848 1248 928 1248 4 polygon
1 1.00 608 1520 608 1536 2 polygon
1 1.00 672 1552 704 1552 2 polygon
-1.00 0 1088 1568 no_pushbutton
1 1.00 1184 1552 1152 1552 2 polygon
1.00 0 704 1440 jumper
1.00 0 704 1552 dot
1.00 0 704 1360 dot
1 1.00 704 1360 704 1424 2 polygon
1.00 0 1152 1440 dot
1.00 0 1152 1552 dot
1.00 0 992 1440 jumper
1 1.00 992 1424 992 1376 1184 1376 3 polygon
1.00 0 1024 1440 jumper
1.00 0 1024 1376 jumper
1.00 0 1024 1248 jumper
1 1.00 1024 1232 1024 1216 704 1216 704 1296 672 1296 5 polygon
1 1.00 1024 1424 1024 1392 2 polygon
1 1.00 1024 1360 1024 1264 2 polygon
(Fwd) {/Helvetica cf} 2 16 0 1.00 736 1616 label
(Rvs) {/Helvetica cf} 2 16 0 1.00 1056 1616 label
(Stop) {/Helvetica cf} 2 16 0 1.00 784 1840 label
1.00 0 1152 1496 diode
1 1.00 608 1456 608 1472 2 polygon
1 1.00 1248 1488 1248 1504 2 polygon
1 1.00 1248 1520 1248 1536 2 polygon
1 1.00 1248 1456 1248 1472 2 polygon
0.600 0.600 0.600 scb
4 1.00 1184 1696 1184 1280 1312 1280 1312 1696 4 polygon
4 1.00 544 1696 544 1280 672 1280 672 1696 4 polygon
sce
1 1.00 608 1552 608 1568 2 polygon
1 1.00 1248 1552 1248 1568 2 polygon
1 1.00 1152 1552 1152 1536 2 polygon
1 1.00 1152 1456 1152 1440 2 polygon
1.00 0 704 1504 diode
1 1.00 832 1552 992 1552 992 1456 3 polygon
1 1.00 1024 1552 1024 1456 2 polygon
1 1.00 896 1792 928 1792 928 1680 3 polygon
1 1.00 768 1792 448 1792 448 1408 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
