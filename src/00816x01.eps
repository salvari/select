%!PS-Adobe-3.0 EPSF-3.0
%%Title: 00816x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sun Dec 12 08:11:26 2004
%%Pages: 1
%%BoundingBox: 68 68 245 260
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

%%Page: 00254x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 560 640 offsets
% 32.00 4.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

0.604 0.604 0.604 scb
241 1.00 560 640 272 0.00 360.00 xcarc
sce
1 1.00 560 640 272 0.00 360.00 xcarc
1.000 1.000 1.000 scb
241 1.00 560 640 224 0.00 360.00 xcarc
0.604 0.604 0.604 scb
240 1.00 320 736 320 544 800 544 800 736 4 polygon
1.000 1.000 1.000 scb
241 1.00 560 640 112 0.00 360.00 xcarc
sce
1 1.00 432 908 688 908 764 736 356 736 spline
1 1.00 432 372 688 372 764 544 356 544 spline
1 1.00 356 736 502 736 2 polygon
1 1.00 618 736 764 736 2 polygon
1 1.00 618 544 764 544 2 polygon
1 1.00 356 544 502 544 2 polygon
1 1.00 426 690 432 582 502 544 502 736 spline
1 1.00 694 690 688 582 618 544 618 736 spline
0.647 0.165 0.165 scb
1 1.00 444 736 440 544 2 polygon
1 1.00 436 736 432 544 2 polygon
1 1.00 428 736 424 544 2 polygon
1 1.00 420 736 416 544 2 polygon
1 1.00 412 736 408 544 2 polygon
1 1.00 404 736 400 544 2 polygon
1 1.00 396 736 392 544 2 polygon
1 1.00 388 736 384 544 2 polygon
1 1.00 380 736 376 544 2 polygon
1 1.00 372 736 368 544 2 polygon
1 1.00 364 736 360 544 2 polygon
1 1.00 760 736 756 544 2 polygon
1 1.00 752 736 748 544 2 polygon
1 1.00 744 736 740 544 2 polygon
1 1.00 736 736 732 544 2 polygon
1 1.00 728 736 724 544 2 polygon
1 1.00 720 736 716 544 2 polygon
1 1.00 712 736 708 544 2 polygon
1 1.00 704 736 700 544 2 polygon
1 1.00 696 736 692 544 2 polygon
1 1.00 688 736 684 544 2 polygon
1 1.00 680 736 676 544 2 polygon
0.604 0.604 0.604 scb
241 1.00 448 688 448 592 512 560 512 720 spline
241 1.00 672 688 672 592 608 560 608 720 spline
sce
1 1.00 448 688 448 592 512 560 512 720 spline
1 1.00 672 688 672 592 608 560 608 720 spline
0.604 0.604 0.604 scb
241 1.00 512 720 512 560 544 608 576 608 608 560 608 720 576 672 544 672 512 
720 9 polygon
sce
1 1.00 512 720 544 672 576 672 608 720 4 polygon
1 1.00 512 560 544 608 576 608 608 560 4 polygon
1.00 0 560 640 dot
(N) {/Times-Roman cf} 2 16 0 1.00 480 624 label
(S) {/Times-Roman cf} 2 16 0 1.00 608 624 label
0.647 0.165 0.165 scb
1 1.00 444 736 444 756 680 756 680 736 4 polygon
1 1.00 328 428 332 252 396 256 360 544 spline
1 1.00 788 428 784 252 720 256 756 544 spline
0.000 0.933 0.000 scb
1 1.00 576 528 544 528 528 544 592 544 spline
1.00 300 520 548 arrowhead
1 1.00 540 748 572 748 588 732 524 732 spline
1.00 120 596 728 arrowhead
sce
(iron) {/Helvetica cf} 2 16 0 1.00 528 876 label
(wire) {/Helvetica cf} 2 16 0 1.00 256 320 label
(wire) {/Helvetica cf} 2 16 0 1.00 784 320 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
