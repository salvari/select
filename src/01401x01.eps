%!PS-Adobe-3.0 EPSF-3.0
%%Title: 01401x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Fri Jan  2 11:10:27 2004
%%Pages: 1
%%BoundingBox: 68 68 490 217
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/jk_flipflop {
begingate
1 1.00 -80 96 -144 96 2 polygon
(J) {/Helvetica cf} 2 16 0 1.00 -112 112 label
0 1.00 -80 144 -80 -144 80 -144 80 144 4 polygon
(Q) {/Helvetica cf} 2 16 0 1.00 96 112 label
1 1.00 144 96 80 96 2 polygon
(Q) {/Helvetica cf} 2 16 0 1.00 96 -80 label
1 1.00 96 -48 128 -48 2 polygon
1 1.00 96 -96 144 -96 2 polygon
1 1.00 88 -96 8 0.00 360.00 xcarc
1 1.00 -80 0 -144 0 2 polygon
1 1.00 -80 16 -48 0 -80 -16 3 polygon
(C) {/Helvetica cf} 2 16 0 1.00 -112 16 label
(K) {/Helvetica cf} 2 16 0 1.00 -112 -80 label
1 1.00 -80 -96 -144 -96 2 polygon
endgate
} def

/jumper {
% trivial
begingate
1 1.00 0 0 10 -90.00 90.00 xcarc
1 1.00 0 10 0 16 2 polygon
1 1.00 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.00 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.00 0 -16 pinlabel
endgate
} def

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/squarewave_source {
begingate
1 1.00 -16 0 -16 16 0 16 0 -16 16 -16 16 0 6 polygon
1 1.00 0 0 32 0.00 360.00 xcarc
1 1.00 0 64 0 32 2 polygon
1 1.00 0 -32 0 -64 2 polygon
endgate
} def

/gnd {
% trivial
begingate
1 1.00 0 0 0 -32 2 polygon
1 1.00 -32 -32 32 -32 2 polygon
1 1.00 -18 -46 18 -46 2 polygon
1 1.00 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.00 0 0 pinglobal
endgate
} def

/and_gate {
begingate
1 1.00 0 -48 -64 -48 -64 48 0 48 4 polygon
1 1.00 0 0 48 -90.00 90.00 xcarc
1.000 0.000 0.000 scb
(Out) {/Helvetica cf} 2 4 0 1.00 48 0 pinlabel
(In.1) {/Helvetica cf} 2 7 0 1.00 -64 32 pinlabel
(In.2) {/Helvetica cf} 2 7 0 1.00 -64 -32 pinlabel
endgate
} def

/or_gate {
begingate
1 1.00 -19 -48 96 30.00 90.00 xcarc
1 1.00 -19 48 96 270.00 330.00 xcarc
1 1.00 -112 0 80 -37.00 37.00 xcarc
1 1.00 -48 48 -19 48 2 polygon
1 1.00 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Helvetica cf} 2 4 0 1.00 64 0 pinlabel
(In.1) {/Helvetica cf} 2 7 0 1.00 -40 32 pinlabel
(In.2) {/Helvetica cf} 2 7 0 1.00 -40 -32 pinlabel
endgate
} def

/invert2 {
begingate
1 1.00 -32 40 -32 -40 2 polygon
1 1.00 -40 0 8 0.00 360.00 xcarc
1 1.00 -48 0 -64 0 2 polygon
1 1.00 -32 40 40 0 -32 -40 3 polygon
1 1.00 40 0 64 0 2 polygon
endgate
} def

%%Page: 14052 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1168 752 offsets
0.5000 inchscale
2.6000 setlinewidth

1.00 0 864 752 jk_flipflop
1.00 0 1392 752 jk_flipflop
1.00 0 720 752 jumper
1 1.00 720 768 720 848 2 polygon
1 1.00 720 736 720 656 2 polygon
1.00 0 720 848 dot
1 1.00 688 944 752 944 2 polygon
(DD) {ss} (V) {/Times-Roman cf} 4 16 0 1.00 688 960 label
1 1.00 720 752 592 752 2 polygon
(Clock) {/Helvetica cf} 2 16 0 1.00 536 776 label
1.00 0 624 752 dot
1.00 0 1008 848 dot
(0) {ss} (Q) {/Times-Roman cf} 4 16 0 1.00 968 960 label
(1) {ss} (Q) {/Times-Roman cf} 4 16 0 1.00 1496 960 label
1.00 0 560 656 squarewave_source
1.00 0 560 592 gnd
1.00 0 1536 848 dot
(2) {ss} (Q) {/Times-Roman cf} 4 16 0 1.00 2024 960 label
(3) {ss} (Q) {/Times-Roman cf} 4 16 0 1.00 2552 960 label
1 1.00 560 720 560 752 592 752 3 polygon
1 1.00 1008 848 1008 944 2 polygon
1 1.00 1536 848 1536 944 2 polygon
0.50 0 1072 640 and_gate
0.50 0 1152 752 or_gate
1 1.00 1248 848 1216 848 1216 656 1248 656 4 polygon
1 1.00 1184 752 1216 752 2 polygon
1.00 0 1248 656 jumper
1 1.00 1248 752 1248 672 2 polygon
0.50 0 1072 864 and_gate
1 1.00 1008 848 1040 848 2 polygon
1 1.00 1008 656 1040 656 2 polygon
1 1.00 1096 864 1112 864 1112 768 1132 768 4 polygon
1 1.00 1096 640 1112 640 1112 736 1132 736 4 polygon
1 1.00 1040 880 1024 880 1024 1040 3 polygon
0.50 0 752 528 invert2
1 1.00 896 528 1024 528 1024 624 1040 624 4 polygon
0.50 0 1600 640 and_gate
0.50 0 1680 752 or_gate
0.50 0 1600 864 and_gate
1 1.00 1536 848 1568 848 2 polygon
1 1.00 1536 656 1568 656 2 polygon
1 1.00 1624 864 1640 864 1640 768 1660 768 4 polygon
1 1.00 1624 640 1640 640 1640 736 1660 736 4 polygon
1 1.00 1424 528 1552 528 1552 624 1568 624 4 polygon
1 1.00 1712 752 1744 752 2 polygon
1.00 0 1112 640 dot
1 1.00 1112 640 1168 640 1168 528 1424 528 4 polygon
1.00 0 1112 864 dot
1 1.00 1112 864 1168 864 1168 1008 1552 1008 4 polygon
1 1.00 1568 880 1552 880 1552 1008 3 polygon
1.00 0 656 752 jumper
1 1.00 656 768 656 1040 1024 1040 3 polygon
1.00 0 656 1040 dot
1 1.00 656 1040 560 1040 2 polygon
(Up/Down) {/Helvetica cf} 2 16 0 1.00 384 1024 label
1 1.00 448 1064 544 1064 2 polygon
1.00 0 1216 752 dot
1.00 0 1248 528 jumper
1 1.00 624 752 624 464 1248 464 1248 512 4 polygon
1 1.00 1248 544 1248 640 2 polygon
1 1.00 1776 848 1744 848 1744 656 1776 656 4 polygon
1.00 0 1744 752 dot
1.00 0 1920 752 jk_flipflop
1.00 0 1776 656 jumper
1 1.00 1776 752 1776 672 2 polygon
1 1.00 1776 544 1776 640 2 polygon
1.00 0 2064 848 dot
1 1.00 2064 848 2064 944 2 polygon
1.00 0 1776 528 jumper
1.00 0 1248 464 dot
1 1.00 1248 464 1776 464 1776 512 3 polygon
0.50 0 2128 640 and_gate
0.50 0 2208 752 or_gate
0.50 0 2128 864 and_gate
1 1.00 2064 848 2096 848 2 polygon
1 1.00 2064 656 2096 656 2 polygon
1 1.00 2152 864 2168 864 2168 768 2188 768 4 polygon
1 1.00 2152 640 2168 640 2168 736 2188 736 4 polygon
1 1.00 1952 528 2080 528 2080 624 2096 624 4 polygon
1 1.00 2096 880 2080 880 2080 1008 3 polygon
1 1.00 2304 848 2272 848 2272 656 2304 656 4 polygon
1.00 0 2272 752 dot
1.00 0 2448 752 jk_flipflop
1 1.00 2592 848 2592 944 2 polygon
1 1.00 2240 752 2272 752 2 polygon
1 1.00 2304 752 2304 672 2 polygon
1.00 0 2304 656 jumper
1 1.00 2304 544 2304 640 2 polygon
1.00 0 1776 464 dot
1 1.00 1776 464 2304 464 2304 544 3 polygon
1.00 0 864 528 jumper
1 1.00 656 736 656 528 720 528 3 polygon
1 1.00 784 528 896 528 2 polygon
1 1.00 720 856 720 944 2 polygon
1 1.00 864 600 8 0.00 360.00 xcarc
1 1.00 864 592 864 544 2 polygon
1.00 0 864 464 jumper
1 1.00 864 512 864 480 2 polygon
1 1.00 864 448 864 400 2 polygon
1.00 0 1392 528 jumper
1 1.00 1392 592 1392 544 2 polygon
1.00 0 1392 464 jumper
1 1.00 1392 512 1392 480 2 polygon
1 1.00 1392 448 1392 400 2 polygon
1 1.00 1392 600 8 0.00 360.00 xcarc
1.00 0 1920 528 jumper
1 1.00 1920 592 1920 544 2 polygon
1.00 0 1920 464 jumper
1 1.00 1920 512 1920 480 2 polygon
1 1.00 1920 448 1920 400 2 polygon
1 1.00 1920 600 8 0.00 360.00 xcarc
1 1.00 2448 600 8 0.00 360.00 xcarc
1 1.00 2448 592 2448 400 2 polygon
(CLR) {/Helvetica cf} 2 16 0 1.00 824 624 label
(CLR) {/Helvetica cf} 2 16 0 1.00 1352 624 label
(CLR) {/Helvetica cf} 2 16 0 1.00 1880 624 label
(CLR) {/Helvetica cf} 2 16 0 1.00 2408 624 label
1 1.00 2448 400 624 400 2 polygon
1.00 0 864 400 dot
1.00 0 1392 400 dot
1.00 0 1920 400 dot
1 1.00 624 400 560 400 2 polygon
(CLR) {/Helvetica cf} 2 16 0 1.00 456 384 label
1 1.00 456 424 528 424 2 polygon
1.00 0 1640 864 dot
1 1.00 1640 864 1640 1008 2080 1008 3 polygon
1.00 0 1640 640 dot
1 1.00 864 904 8 0.00 360.00 xcarc
1 1.00 864 912 864 960 2 polygon
1 1.00 1392 904 8 0.00 360.00 xcarc
1 1.00 1392 912 1392 960 2 polygon
1 1.00 1920 904 8 0.00 360.00 xcarc
1 1.00 1920 912 1920 960 2 polygon
1 1.00 2448 904 8 0.00 360.00 xcarc
1 1.00 2448 912 2448 960 2 polygon
(PRE) {/Helvetica cf} 2 16 0 1.00 824 856 label
(PRE) {/Helvetica cf} 2 16 0 1.00 1352 856 label
(PRE) {/Helvetica cf} 2 16 0 1.00 1880 856 label
(PRE) {/Helvetica cf} 2 16 0 1.00 2408 856 label
1 1.00 1640 640 1640 528 1960 528 3 polygon
1.00 0 1920 1008 jumper
1.00 0 1392 1008 jumper
1.00 0 864 1040 jumper
1 1.00 864 1024 864 960 2 polygon
1 1.00 1392 992 1392 960 2 polygon
1 1.00 1920 992 1920 960 2 polygon
1 1.00 864 1056 864 1104 2448 1104 2448 960 4 polygon
1 1.00 1920 1104 1920 1024 2 polygon
1.00 0 1920 1104 dot
1.00 0 1392 1104 dot
1 1.00 1392 1104 1392 1024 2 polygon
1.00 0 864 1104 dot
1 1.00 864 1104 560 1104 2 polygon
(PRE) {/Helvetica cf} 2 16 0 1.00 472 1096 label
1 1.00 472 1136 544 1136 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
