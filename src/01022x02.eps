%!PS-Adobe-3.0 EPSF-3.0
%%Title: 01022x02.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sat Dec 25 12:56:41 2004
%%Pages: 1
%%BoundingBox: 68 68 400 232
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/inductor_medium {
begingate
1 1.00 0 96 0 80 2 polygon
1 1.00 24 78 22 46 -14 58 0 80 spline
1 1.00 23 62 21 30 -15 42 -1 64 spline
1 1.00 -19 60 -16 64 -2 64 -14 58 spline
1 1.00 -19 44 -16 48 -2 48 -14 42 spline
1 1.00 23 46 21 14 -15 26 -1 48 spline
1 1.00 -19 28 -16 32 -2 32 -14 26 spline
1 1.00 23 30 21 -2 -15 10 -1 32 spline
1 1.00 -19 12 -16 16 -2 16 -14 10 spline
1 1.00 23 14 21 -18 -15 -6 -1 16 spline
1 1.00 -19 -4 -16 0 -2 0 -14 -6 spline
1 1.00 23 -2 21 -34 -15 -22 -1 0 spline
1 1.00 -19 -20 -16 -16 -2 -16 -14 -22 spline
1 1.00 23 -18 21 -50 -15 -38 -1 -16 spline
1 1.00 -19 -36 -16 -32 -2 -32 -14 -38 spline
1 1.00 23 -34 21 -66 -15 -54 -1 -32 spline
1 1.00 -19 -52 -16 -48 -2 -48 -14 -54 spline
1 1.00 24 -50 22 -82 -14 -70 0 -48 spline
1 1.00 -18 -68 -15 -64 -1 -64 -13 -70 spline
1 1.00 14 -64 26 -83 0 -86 -2 -64 spline
1 1.00 0 -86 0 -98 2 polygon
1 1.00 0 -112 0 -96 2 polygon
endgate
} def

/battery {
begingate
1 1.00 -32 32 32 32 2 polygon
1 1.00 0 64 0 32 2 polygon
1 1.00 -16 12 16 12 2 polygon
1 1.00 -16 -28 16 -28 2 polygon
1 1.00 -32 -8 32 -8 2 polygon
1 1.00 0 -64 0 -28 2 polygon
1.000 0.000 0.000 scb
(b.p) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
(b.m) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
endgate
} def

/inductor {
begingate
1 1.00 20 -28 20 -44 0 -48 0 -24 spline
1 1.00 -20 -20 -20 -32 0 -28 0 -24 spline
1 1.00 20 32 20 16 0 12 0 36 spline
1 1.00 20 12 20 -4 0 -8 0 16 spline
1 1.00 20 -8 20 -24 0 -28 0 -4 spline
1 1.00 -20 20 -20 8 0 12 0 16 spline
1 1.00 -20 0 -20 -12 0 -8 0 -4 spline
1 1.00 0 -48 0 -64 2 polygon
1 1.00 0 36 0 48 2 polygon
1.000 0.000 0.000 scb
(l.1) {/Times-Roman cf} 2 9 0 1.00 0 48 pinlabel
(l.2) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:L%i %pl.1 %pl.2 1.0U) {/Times-Roman cf} 2 0 0 1.00 -208 -160 infolabel
(sim:l %pl.1 %pl.2) {/Times-Roman cf} 2 0 0 1.00 -208 -208 infolabel
endgate
} def

/resistor {
begingate
1 1.00 0 64 0 36 2 polygon
1 1.00 0 -64 0 -36 2 polygon
1 1.00 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.00 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.00 -208 -208 infolabel
endgate
} def

/toggle_nc {
begingate
1 1.00 -16 0 24 8 2 polygon
1.00 0 -16 0 dot
1 1.00 -64 0 -16 0 2 polygon
1.00 0 16 0 dot
1 1.00 16 0 64 0 2 polygon
endgate
} def

/fuse {
begingate
1 1.00 -48 0 48 0 0 -32 0 32 spline
endgate
} def

/toggle {
begingate
1 1.00 -16 -16 16 16 2 polygon
1 1.00 -64 -16 -16 -16 2 polygon
1.00 0 -16 -16 dot
1.00 0 16 -16 dot
1 1.00 16 -16 64 -16 2 polygon
endgate
} def

/lamp {
begingate
1 1.00 0 32 0 80 2 polygon
1 1.00 0 0 35 0.00 360.00 xcarc
1 1.00 26 44 26 -47 2 22 2 -24 spline
1 1.00 0 32 4 16 2 polygon
1 1.00 0 -32 0 -80 2 polygon
1 1.00 0 -32 4 -20 2 polygon
endgate
} def

/gnd {
% trivial
begingate
1 1.00 0 0 0 -32 2 polygon
1 1.00 -32 -32 32 -32 2 polygon
1 1.00 -18 -46 18 -46 2 polygon
1 1.00 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.00 0 0 pinglobal
endgate
} def

/jumper {
% trivial
begingate
1 1.00 0 0 10 -90.00 90.00 xcarc
1 1.00 0 10 0 16 2 polygon
1 1.00 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.00 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.00 0 -16 pinlabel
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/no_pushbutton {
begingate
1 1.00 -32 0 32 0 2 polygon
1 1.00 0 32 0 0 2 polygon
1 1.00 -64 -16 -16 -16 2 polygon
1.00 0 -16 -16 dot
1 1.00 16 -16 64 -16 2 polygon
1.00 0 16 -16 dot
endgate
} def

/motor {
begingate
1 1.00 0 0 48 0.00 360.00 xcarc
1 1.00 -8 48 -8 64 8 64 8 48 4 polygon
1 1.00 -8 -48 -8 -64 8 -64 8 -48 4 polygon
(Mtr) {/Helvetica cf} 2 16 0 1.00 -28 -12 label
endgate
} def

%%Page: 00254x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 944 493 offsets
0.7500 inchscale
2.6000 setlinewidth

1 1.00 416 541 40 0.00 360.00 xcarc
1.00 0 416 541 dot
1 1.00 416 541 32 0.00 360.00 xcarc
1 1.00 404 579 406 572 2 polygon
1 1.00 426 579 424 572 2 polygon
1 1.00 445 569 439 564 2 polygon
1 1.00 454 552 447 550 2 polygon
1 1.00 455 531 447 533 2 polygon
1 1.00 444 513 439 518 2 polygon
1 1.00 428 503 426 511 2 polygon
1 1.00 406 503 408 509 2 polygon
1 1.00 388 513 393 518 2 polygon
1 1.00 377 530 385 532 2 polygon
1 1.00 377 552 386 550 2 polygon
1 1.00 388 569 392 564 2 polygon
240 1.00 408 597 408 581 424 581 424 597 4 polygon
240 1.00 408 501 408 485 424 485 424 501 4 polygon
-1.00 0 288 541 inductor_medium
1 1.00 288 445 288 381 416 381 416 493 4 polygon
1.00 0 416 381 dot
0.604 0.604 0.604 scb
4 1.00 256 733 256 349 472 349 472 733 4 polygon
sce
(Generator) {/Helvetica cf} 2 16 0 1.00 272 301 label
-1.00 180 816 461 battery
(Battery) {/Helvetica cf} 2 16 0 1.00 872 597 label
1 1.00 416 701 416 589 2 polygon
1 1.00 288 637 288 701 2 polygon
-1.00 0 672 605 inductor
-1.00 0 672 477 resistor
1 1.00 672 413 672 381 2 polygon
-1.00 0 672 381 dot
1 1.00 648 637 648 557 2 polygon
1 1.00 632 637 632 557 2 polygon
-1.00 180 640 701 toggle_nc
-1.00 90 944 701 fuse
1.00 90 1120 621 toggle
1.00 0 1104 477 lamp
1.00 0 816 381 dot
1.00 0 816 381 gnd
1.00 0 1104 381 gnd
1 1.00 1104 381 1104 397 2 polygon
1 1.00 1104 685 1104 701 976 701 3 polygon
3 1.00 640 689 640 641 2 polygon
0.604 0.604 0.604 scb
4 1.00 576 725 576 421 704 421 704 725 4 polygon
sce
1.00 360 528 765 jumper
1 1.00 528 749 528 701 576 701 3 polygon
1 1.00 528 781 528 813 288 813 288 701 4 polygon
(Regulator) {/Helvetica cf} 2 16 0 1.00 528 301 label
(\(6 volts\)) {/Helvetica cf} 2 16 0 1.00 536 261 label
1.00 15 608 373 arrow
1.00 90 1248 621 toggle
1.00 0 1232 477 lamp
1.00 0 1232 381 gnd
1 1.00 1232 381 1232 397 2 polygon
1 1.00 1104 701 1232 701 1232 685 3 polygon
1.00 0 1104 701 dot
1.00 0 1232 701 dot
1 1.00 1232 701 1360 701 1360 685 3 polygon
1.00 90 1376 621 no_pushbutton
1.00 0 1360 493 motor
1.00 0 1360 381 gnd
1 1.00 1360 381 1360 429 2 polygon
(12-volt loads) {/Helvetica cf} 2 16 0 1.00 1120 733 label
-1.00 180 816 589 battery
(\(6 volts\)) {/Helvetica cf} 2 16 0 1.00 864 557 label
(Battery) {/Helvetica cf} 2 16 0 1.00 872 469 label
(\(6 volts\)) {/Helvetica cf} 2 16 0 1.00 864 429 label
1.00 0 816 701 dot
1 1.00 816 653 816 701 912 701 3 polygon
1 1.00 416 381 816 381 816 397 3 polygon
1 1.00 704 701 816 701 2 polygon
1 1.00 672 653 672 669 752 669 752 525 816 525 5 polygon
1.00 0 816 525 dot
1 1.00 416 701 416 765 816 765 816 701 4 polygon
(Fuse) {/Helvetica cf} 2 16 0 1.00 896 733 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
