%!PS-Adobe-3.0 EPSF-3.0
%%Title: proj_stp.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Tue Jun  6 18:53:35 2006
%%Pages: 1
%%BoundingBox: 68 68 307 386
%%DocumentNeededResources: font Helvetica font Helvetica-Bold 
%%+ font Helvetica-Oblique font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/jumper {
% trivial
begingate
1 1.00 0 0 10 -90.00 90.00 xcarc
1 1.00 0 10 0 16 2 polygon
1 1.00 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.00 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.00 0 -16 pinlabel
endgate
} def

/squarewave_source {
begingate
1 1.00 -16 0 -16 16 0 16 0 -16 16 -16 16 0 6 polygon
1 1.00 0 0 32 0.00 360.00 xcarc
1 1.00 0 64 0 32 2 polygon
1 1.00 0 -32 0 -64 2 polygon
endgate
} def

/gnd {
% trivial
begingate
1 1.00 0 0 0 -32 2 polygon
1 1.00 -32 -32 32 -32 2 polygon
1 1.00 -18 -46 18 -46 2 polygon
1 1.00 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.00 0 0 pinglobal
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/npn {
begingate
1 1.00 -48 0 -64 0 2 polygon
1 1.00 -48 48 -48 -48 2 polygon
1 1.00 0 48 -48 22 2 polygon
1 1.00 0 48 0 64 2 polygon
1 1.00 0 -48 -48 -22 2 polygon
1 1.00 0 -48 0 -64 2 polygon
1.00 120 0 -48 arrowhead
1.000 0.000 0.000 scb
(C) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
(B) {/Times-Roman cf} 2 7 0 1.00 -64 0 pinlabel
(E) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:Q%i %pC %pB %pE npn) {/Times-Roman cf} 2 4 0 1.00 -244 -139 infolabel
(sim:b %pB %pE %pC) {/Times-Roman cf} 2 4 0 1.00 -244 -187 infolabel
endgate
} def

/buffer {
begingate
1 1.00 -32 -40 -32 40 40 0 -32 -40 4 polygon
1 1.00 -32 0 -64 0 2 polygon
1 1.00 40 0 64 0 2 polygon
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 672 998 offsets
0.7500 inchscale
2.6000 setlinewidth

(SRG) {/Helvetica-Bold cf} 2 16 0 1.00 672 1046 label
(in) {ss} (S) {/Times-Roman cf} 4 16 0 1.00 528 982 label
1 1.00 576 902 576 822 2 polygon
1 1.00 640 902 640 822 2 polygon
1 1.00 704 902 704 822 2 polygon
1 1.00 768 902 768 822 2 polygon
1.00 0 768 854 dot
-1.00 90 704 854 jumper
-1.00 90 640 854 jumper
-1.00 90 576 854 jumper
1 1.00 592 854 624 854 2 polygon
1 1.00 656 854 688 854 2 polygon
1 1.00 720 854 768 854 2 polygon
(0) {ss} (Q) {/Times-Roman cf} 4 16 0 1.00 560 918 label
(1) {ss} (Q) {/Times-Roman cf} 4 16 0 1.00 624 918 label
(2) {ss} (Q) {/Times-Roman cf} 4 16 0 1.00 688 918 label
(3) {ss} (Q) {/Times-Roman cf} 4 16 0 1.00 752 918 label
1 1.00 512 1078 544 1062 512 1046 3 polygon
1 1.00 512 1062 352 1062 2 polygon
1.00 0 288 982 squarewave_source
1 1.00 288 1046 288 1062 352 1062 3 polygon
1.00 0 288 918 gnd
1 1.00 512 998 448 998 448 854 560 854 4 polygon
(Clk) {/Helvetica cf} 2 16 0 1.00 560 1046 label
1 1.00 576 1270 576 1190 2 polygon
1 1.00 640 1270 640 1190 2 polygon
1 1.00 704 1270 704 1190 2 polygon
1 1.00 768 1270 768 1190 2 polygon
1 1.00 640 1270 928 1270 928 1254 3 polygon
1.00 0 928 1254 gnd
1.00 0 768 1270 dot
1.00 0 704 1270 dot
1 1.00 576 1270 576 1318 2 polygon
1 1.00 544 1318 608 1318 2 polygon
(+V) {/Helvetica cf} 2 16 0 1.00 544 1334 label
0 1.00 512 1190 512 902 832 902 832 1190 4 polygon
(0) {ss} (D) {/Times-Roman cf} 4 16 0 1.00 560 1150 label
(1) {ss} (D) {/Times-Roman cf} 4 16 0 1.00 624 1150 label
(2) {ss} (D) {/Times-Roman cf} 4 16 0 1.00 688 1150 label
(3) {ss} (D) {/Times-Roman cf} 4 16 0 1.00 752 1150 label
1 1.00 576 822 576 774 480 774 480 710 4 polygon
1 1.00 768 822 768 774 864 774 864 710 4 polygon
1 1.00 608 710 608 742 640 742 640 822 4 polygon
1 1.00 736 710 736 742 704 742 704 822 4 polygon
1.00 90 480 454 npn
1.00 90 480 646 buffer
1.00 90 608 646 buffer
1.00 90 736 646 buffer
1.00 90 864 646 buffer
(Buffers) {/Helvetica cf} 2 16 0 1.00 912 630 label
1 1.00 480 486 64 0.00 360.00 xcarc
1.00 90 608 358 npn
1 1.00 608 390 64 0.00 360.00 xcarc
1.00 90 736 454 npn
1 1.00 736 486 64 0.00 360.00 xcarc
1.00 90 864 358 npn
1 1.00 864 390 64 0.00 360.00 xcarc
1 1.00 480 518 480 582 2 polygon
1 1.00 608 422 608 582 2 polygon
1 1.00 736 518 736 582 2 polygon
1 1.00 864 422 864 582 2 polygon
(Power) {/Helvetica cf} 2 16 0 1.00 928 510 label
(transistors) {/Helvetica cf} 2 16 0 1.00 888 470 label
(. . . to the stepper motor . . .) {/Helvetica-Oblique cf} 2 16 0 1.00 432 262 
label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
