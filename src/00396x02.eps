%!PS-Adobe-3.0 EPSF-3.0
%%Title: 00396x02.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Thu Oct 21 19:28:51 2004
%%Pages: 1
%%BoundingBox: 68 68 418 213
%%DocumentNeededResources: font Helvetica-Oblique font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 00254x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 864 544 offsets
0.7500 inchscale
2.6000 setlinewidth

0.800 0.800 0.800 scb
241 1.00 864 544 16 0.00 360.00 xcarc
sce
1 1.00 864 544 16 0.00 360.00 xcarc
0.824 0.706 0.549 scb
240 1.00 704 656 704 432 256 432 256 656 4 polygon
240 1.00 1472 656 1472 432 1024 432 1024 656 4 polygon
sce
0 1.00 1472 656 1472 432 1024 432 1024 656 4 polygon
0 1.00 704 656 704 432 256 432 256 656 4 polygon
(N) {/Times-Roman cf} 2 16 0 1.00 640 528 label
(S) {/Times-Roman cf} 2 16 0 1.00 288 528 label
(N) {/Times-Roman cf} 2 16 0 1.00 1408 528 label
(S) {/Times-Roman cf} 2 16 0 1.00 1056 528 label
0.000 0.933 0.000 scb
1 1.00 864 544 32 0.00 360.00 xcarc
1.00 180 896 528 arrowhead
-1.00 0 832 560 arrowhead
1 1.00 800 512 800 592 864 592 720 512 spline
1 1.00 928 512 928 592 864 592 1008 512 spline
1.00 90 880 592 arrowhead
1 1.00 784 528 800 608 864 608 720 528 spline
1.00 90 880 608 arrowhead
1.00 90 880 624 arrowhead
1.00 90 880 640 arrowhead
1.00 90 880 656 arrowhead
1.00 90 880 672 arrowhead
1.00 90 880 688 arrowhead
1.00 90 880 704 arrowhead
1.00 90 880 720 arrowhead
1.00 90 880 736 arrowhead
1 1.00 800 496 816 464 864 464 720 496 spline
1 1.00 928 496 912 464 864 464 1008 496 spline
1.00 90 880 464 arrowhead
1 1.00 800 480 816 448 864 448 720 480 spline
1 1.00 928 480 912 448 864 448 1008 480 spline
1.00 90 880 448 arrowhead
1 1.00 800 464 816 432 864 432 720 464 spline
1 1.00 928 464 912 432 864 432 1008 464 spline
1.00 90 880 432 arrowhead
1 1.00 800 448 816 416 864 416 720 448 spline
1 1.00 928 448 912 416 864 416 1008 448 spline
1.00 90 880 416 arrowhead
1 1.00 800 432 816 400 864 400 720 432 spline
1 1.00 928 432 912 400 864 400 1008 432 spline
1.00 90 880 400 arrowhead
1 1.00 784 544 800 624 864 624 720 544 spline
1 1.00 784 560 800 640 864 640 720 560 spline
1 1.00 784 576 800 656 864 656 720 576 spline
1 1.00 784 592 800 672 864 672 720 592 spline
1 1.00 784 608 800 688 864 688 720 608 spline
1 1.00 784 624 800 704 864 704 720 624 spline
1 1.00 784 640 800 720 864 720 720 640 spline
1 1.00 784 656 800 736 864 736 720 656 spline
1 1.00 944 528 928 608 864 608 1008 528 spline
1 1.00 944 544 928 624 864 624 1008 544 spline
1 1.00 944 560 928 640 864 640 1008 560 spline
1 1.00 944 576 928 656 864 656 1008 576 spline
1 1.00 944 592 928 672 864 672 1008 592 spline
1 1.00 944 608 928 688 864 688 1008 608 spline
1 1.00 944 624 928 704 864 704 1008 624 spline
1 1.00 944 640 928 720 864 720 1008 640 spline
1 1.00 944 656 928 736 864 736 1008 656 spline
1.000 0.000 0.000 scb
3.00 180 864 416 arrow
(Force) {/Helvetica-Oblique cf} 2 16 0 1.00 800 256 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
