%!PS-Adobe-3.0 EPSF-3.0
%%Title: cycle5.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Mon Jul 19 18:40:47 2004
%%Pages: 1
%%BoundingBox: 68 68 471 328
%%DocumentNeededResources: font Helvetica font Helvetica-Bold 
%%+ font Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/big_arrow {
begingate
0.000 0.933 0.000 scb
241 1.00 -96 16 16 16 16 32 80 0 16 -32 16 -16 -96 -16 -96 16 8 polygon
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/big_arrow2 {
begingate
0.824 0.706 0.549 scb
241 1.00 -80 16 16 16 16 32 80 0 16 -32 16 -16 -80 -16 -80 16 8 polygon
sce
(Output) {/Helvetica-Oblique cf} 2 16 0 0.70 -64 -8 label
endgate
} def

%%Page: cycle1.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 895 752 offsets
% 32.00 4.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

(Information) {/Helvetica cf} 2 16 0 1.00 303 680 label
(source) {/Helvetica cf} 2 16 0 1.00 343 648 label
1 1.00 239 720 239 608 303 608 303 720 spline
1 1.00 559 720 559 608 495 608 495 720 spline
1 1.00 303 720 495 720 2 polygon
1 1.00 303 608 495 608 2 polygon
1 1.00 831 784 16 0.00 360.00 xcarc
1 1.00 895 784 16 0.00 360.00 xcarc
1 1.00 863 768 847 736 879 736 863 768 4 polygon
1 1.00 831 688 895 688 911 720 815 720 spline
1 1.00 863 752 80 0.00 360.00 xcarc
(Learner) {/Helvetica-Bold cf} 2 16 0 1.00 807 848 label
1.00 0 831 784 dot
1.00 0 895 784 dot
1.00 345 671 704 big_arrow
(Information) {/Helvetica cf} 2 16 0 1.00 303 840 label
(source) {/Helvetica cf} 2 16 0 1.00 343 808 label
1 1.00 239 880 239 768 303 768 303 880 spline
1 1.00 303 880 495 880 2 polygon
1 1.00 303 768 495 768 2 polygon
1 1.00 559 880 559 768 495 768 495 880 spline
(Information) {/Helvetica cf} 2 16 0 1.00 399 1000 label
(source) {/Helvetica cf} 2 16 0 1.00 439 968 label
1 1.00 335 1040 335 928 399 928 399 1040 spline
1 1.00 399 1040 591 1040 2 polygon
1 1.00 399 928 591 928 2 polygon
1 1.00 655 1040 655 928 591 928 591 1040 spline
(Information) {/Helvetica cf} 2 16 0 1.00 399 504 label
(source) {/Helvetica cf} 2 16 0 1.00 439 472 label
1 1.00 335 544 335 432 399 432 399 544 spline
1 1.00 399 544 591 544 2 polygon
1 1.00 399 432 591 432 2 polygon
1 1.00 655 544 655 432 591 432 591 544 spline
1.00 15 671 800 big_arrow
(Input) {/Helvetica-Oblique cf} 2 16 15 0.75 595 812 label
1.00 45 719 896 big_arrow
1.00 315 719 608 big_arrow
(Input) {/Helvetica-Oblique cf} 2 16 45 0.75 663 940 label
(ask an expert) {/Helvetica-Bold cf} 2 16 0 0.70 415 936 label
(read a book) {/Helvetica-Bold cf} 2 16 0 0.70 327 776 label
(read another book) {/Helvetica-Bold cf} 2 16 0 0.70 287 616 label
(Input) {/Helvetica-Oblique cf} 2 16 345 0.75 607 680 label
(Input) {/Helvetica-Oblique cf} 2 16 315 0.75 671 548 label
1.000 0.000 0.000 scb
1.00 270 647 1008 arrowhead
sce
(Query) {/Helvetica-Oblique cf} 2 16 30 0.75 743 972 label
1.000 0.000 0.000 scb
1 1.00 863 592 831 496 655 496 863 656 spline
-1.00 270 647 496 arrowhead
sce
(Query) {/Helvetica-Oblique cf} 2 16 330 0.75 751 520 label
1.000 0.000 0.000 scb
1 1.00 735 832 655 864 559 848 783 800 spline
1.00 255 551 844 arrowhead
1 1.00 735 672 655 640 559 656 783 704 spline
1.00 285 551 660 arrowhead
sce
(Query) {/Helvetica-Oblique cf} 2 16 360 0.75 607 864 label
(Query) {/Helvetica-Oblique cf} 2 16 360 0.75 607 624 label
1.000 0.000 0.000 scb
1 1.00 743 1016 839 968 855 896 655 1008 spline
sce
1.00 0 1071 752 big_arrow2
1.00 330 1055 864 big_arrow2
1.00 30 1055 640 big_arrow2
(Application) {/Helvetica cf} 2 16 0 1.00 1263 956 label
(describe what you've learned) {/Helvetica-Bold cf} 2 16 0 0.70 1175 924 label
0 1.00 1167 992 1167 912 1567 912 1567 992 4 polygon
(Application) {/Helvetica cf} 2 16 0 1.00 1295 756 label
0 1.00 1199 792 1199 712 1599 712 1599 792 4 polygon
(Application) {/Helvetica cf} 2 16 0 1.00 1263 556 label
0 1.00 1167 592 1167 512 1567 512 1567 592 4 polygon
(teach someone else) {/Helvetica-Bold cf} 2 16 0 0.70 1263 724 label
(build something ) {/Helvetica-Bold cf} 2 16 0 0.70 1259 524 label
1.00 300 991 960 big_arrow2
0 1.00 1071 1120 1071 1040 1471 1040 1471 1120 4 polygon
(Application) {/Helvetica cf} 2 16 0 1.00 1167 1084 label
(write it in your own words) {/Helvetica-Bold cf} 2 16 0 0.70 1103 1052 label
1.00 60 991 544 big_arrow2
0 1.00 1071 464 1071 384 1471 384 1471 464 4 polygon
(Application) {/Helvetica cf} 2 16 0 1.00 1167 428 label
(practice, practice, practice) {/Helvetica-Bold cf} 2 16 0 0.70 1103 396 label
1 1.00 1007 1040 1167 976 1167 752 1023 1136 spline
1 1.00 1007 464 1167 528 1167 752 1023 368 spline
1 1.00 1031 1152 1055 1152 1087 1152 1023 1136 spline
1 1.00 1031 352 1055 352 1087 352 1023 368 spline
1 1.00 1551 352 1663 448 1663 752 1471 352 spline
1 1.00 1087 352 1471 352 2 polygon
1 1.00 1551 1152 1663 1056 1663 752 1471 1152 spline
1 1.00 1087 1152 1471 1152 2 polygon
0.361 0.675 0.933 scb
241 1.00 1279 336 1279 288 911 288 911 608 927 608 895 656 863 608 879 608 879 
256 1311 256 1311 336 1279 336 12 polygon
sce
(Feedback) {/Helvetica-Oblique cf} 2 16 0 0.70 1015 264 label
(internet search) {/Helvetica-Bold cf} 2 16 0 0.70 399 444 label
1.000 0.000 0.000 scb
1 1.00 891 996 927 1108 1007 1108 895 896 spline
-1.00 90 1019 1108 arrowhead
sce
(Query) {/Helvetica-Oblique cf} 2 16 300 0.75 891 1016 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
